<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Jogo da Velha</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100vh;
      margin: 0;
      background-color: #f4f4f9;
    }

    h1 {
      margin-bottom: 20px;
    }

    .board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-template-rows: repeat(3, 100px);
      gap: 10px;
    }

    .cell {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 100px;
      height: 100px;
      font-size: 2rem;
      font-weight: bold;
      background-color: #ffffff;
      border: 2px solid #ddd;
      cursor: pointer;
    }

    .cell:hover {
      background-color: #f0f0f0;
    }

    .cell.taken {
      pointer-events: none;
    }

    .message {
      margin-top: 20px;
      font-size: 1.2rem;
    }

    button {
      margin-top: 20px;
      padding: 10px 20px;
      font-size: 1rem;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    button:hover {
      background-color: #45a049;
    }
  </style>
</head>
<body>
  <h1>Jogo da Velha</h1>
  <div class="board" id="board">
    <!-- Células do jogo serão geradas aqui -->
  </div>
  <div class="message" id="message"></div>
  <button id="restart">Reiniciar Jogo</button>

  <script>
    const board = document.getElementById('board');
    const message = document.getElementById('message');
    const restartButton = document.getElementById('restart');

    let currentPlayer = 'X';
    let gameActive = true;
    const gameState = Array(9).fill(null);

    const winningConditions = [
      [0, 1, 2], [3, 4, 5], [6, 7, 8],
      [0, 3, 6], [1, 4, 7], [2, 5, 8],
      [0, 4, 8], [2, 4, 6]
    ];

    function handleCellClick(e) {
      const cell = e.target;
      const cellIndex = parseInt(cell.getAttribute('data-index'));

      if (gameState[cellIndex] || !gameActive) return;

      gameState[cellIndex] = currentPlayer;
      cell.textContent = currentPlayer;
      cell.classList.add('taken');

      if (checkWinner()) {
        message.textContent = Jogador ${currentPlayer} venceu!;
        gameActive = false;
        return;
      }

      if (gameState.every(cell => cell)) {
        message.textContent = 'Empate!';
        gameActive = false;
        return;
      }

      currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
      message.textContent = É a vez do jogador ${currentPlayer};
    }

    function checkWinner() {
      return winningConditions.some(condition => {
        const [a, b, c] = condition;
        return gameState[a] && gameState[a] === gameState[b] && gameState[a] === gameState[c];
      });
    }

    function restartGame() {
      gameState.fill(null);
      currentPlayer = 'X';
      gameActive = true;
      message.textContent = 'É a vez do jogador X';
      board.innerHTML = '';
      createBoard();
    }

    function createBoard() {
      for (let i = 0; i < 9; i++) {
        const cell = document.createElement('div');
        cell.classList.add('cell');
        cell.setAttribute('data-index', i);
        cell.addEventListener('click', handleCellClick);
        board.appendChild(cell);
      }
    }

    restartButton.addEventListener('click', restartGame);

    createBoard();
    message.textContent = 'É a vez do jogador X';
  </script>
</body>
</html>
